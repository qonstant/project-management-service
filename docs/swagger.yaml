definitions:
  db.CreateProjectParams:
    properties:
      description:
        type: string
      end_date:
        type: string
      manager_id:
        type: integer
      name:
        type: string
      start_date:
        type: string
    type: object
  db.CreateTaskParams:
    type: object
  db.CreateUserParams:
    properties:
      email:
        type: string
      full_name:
        type: string
      registration_date:
        type: string
      role:
        type: string
    type: object
  db.NullableTime:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  db.Project:
    properties:
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      manager_id:
        type: integer
      name:
        type: string
      start_date:
        type: string
    type: object
  db.Task:
    properties:
      assignee_id:
        type: integer
      completion_date:
        $ref: '#/definitions/db.NullableTime'
      creation_date:
        type: string
      description:
        type: string
      id:
        type: integer
      priority:
        $ref: '#/definitions/db.TaskPriority'
      project_id:
        type: integer
      status:
        $ref: '#/definitions/db.TaskStatus'
      title:
        type: string
    type: object
  db.TaskPriority:
    enum:
    - low
    - medium
    - high
    type: string
    x-enum-varnames:
    - TaskPriorityLow
    - TaskPriorityMedium
    - TaskPriorityHigh
  db.TaskStatus:
    enum:
    - new
    - in_progress
    - completed
    type: string
    x-enum-varnames:
    - TaskStatusNew
    - TaskStatusInProgress
    - TaskStatusCompleted
  db.UpdateProjectParams:
    properties:
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      manager_id:
        type: integer
      name:
        type: string
      start_date:
        type: string
    type: object
  db.UpdateTaskParams:
    type: object
  db.UpdateUserParams:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      registration_date:
        type: string
      role:
        type: string
    type: object
  db.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      registration_date:
        type: string
      role:
        type: string
    type: object
  response.Object:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /projects:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List of projects from the repository
      tags:
      - projects
    post:
      consumes:
      - application/json
      parameters:
      - description: Project details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.CreateProjectParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Add a new project to the repository
      tags:
      - projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Delete a project from the repository
      tags:
      - projects
    get:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Project'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Get a project from the repository
      tags:
      - projects
    put:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.UpdateProjectParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Update a project in the repository
      tags:
      - projects
  /tasks:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List of tasks from the repository
      tags:
      - tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Task details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.CreateTaskParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Add a new task to the repository
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Delete a task from the repository
      tags:
      - tasks
    get:
      consumes:
      - application/json
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Task'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Get a task from the repository
      tags:
      - tasks
    put:
      consumes:
      - application/json
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.UpdateTaskParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Update a task in the repository
      tags:
      - tasks
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List of users from the repository
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.CreateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Add a new user to the repository
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Delete a user from the repository
      tags:
      - users
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Get a user from the repository
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.UpdateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Update a user in the repository
      tags:
      - users
swagger: "2.0"
